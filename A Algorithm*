from queue import PriorityQueue

def astar(graph, start, goal, h):
    pq = PriorityQueue()
    pq.put((0 + h[start], 0, start, []))
    visited = set()
    while not pq.empty():
        f, g, node, path = pq.get()
        if node in visited:
            continue
        visited.add(node)
        path = path + [node]
        if node == goal:
            print("Path:", path)
            return
        for neighbor, cost in graph[node].items():
            pq.put((g + cost + h[neighbor], g + cost, neighbor, path))

graph = {
    'A': {'B': 1, 'C': 4},
    'B': {'D': 2},
    'C': {'D': 1},
    'D': {}
}
h = {'A': 3, 'B': 2, 'C': 2, 'D': 0}
astar(graph, 'A', 'D', h)

